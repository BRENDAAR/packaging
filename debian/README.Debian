--------------------------
MythTV for Debian & Ubuntu
--------------------------
The MythTV package is actually a giant source package that includes all of the
work that upstream MythTV works on.  It's organized this way for maintainer 
simplicity and to workaround some limitations within Launchpad.

If it's decoupled into many individual packages, the maintainer will need to 
always make sure they're uploaded in sync.  This can mean 3-5 uploads each time 
rather than a single one.

Launchpad's PPA system can sometimes get backed up, meaning package builds will 
skew on different architectures as well as for plugins/themes versus the main 
package.


>>Preparing an upload
When uploading a package to the archive, you have a few different steps for how 
to prepare the package than the rest of Ubuntu or Debian.

1) Update the revision of the checkout to a current revision.  
   A) If you aren't changing branches or major versions, there is a helper rule 
      for this.
   # debian/rules update-latest-revision

   B) If you are changing branches or versions, set the version # of the 
      checkout you want in debian/changelog's new entry. See below for more 
      details on how to set this string up properly.
   # dch -i

2) Check out the upstream source in svn format. This will create an orig.tar.gz
   based on the version you just set in <1>.  In the future, you won't need to
   replace the whole checkout.  It will just svn update to the new version num.
# debian/rules get-svn-source

3) Rebuild the control files.  They need to hardcode the ABI of libmyth as well
   as all of the themes supported for the myththemes metapackage.
# debian/rules update-control-files

4) (Optional) Append the upstream changelog entries. If this is a minor bump,
   including those changelog entries can be useful to users.  If it's a major bump
   this type of data might just be a waste.
# debian/rules update-upstream-changelog

>> MythTV version string
All of the scripts for the special rules are dependent upon finding the MythTV
version string in a special format to represent individual data.

Here's a sample string for mythtv-fixes 0.24:
1:0.24.0+fixes27235-0ubuntu1

Let's break it apart:
1:        -> epoch.  standard debian thing.
0.24.0    -> upstream version number.
+         -> delimitter indicating this is newer than the 0.24.0 release
fixes     -> indicates this is a checkout from release-X-YZ-fixes
27235     -> svn revno
-0ubuntu1 -> indicates not in debian, but this is ubuntu package iteration 1


Here's a sample string for mythtv-trunk 0.25:
1:0.25.0~trunk27235-0ubuntu1

Let's break it apart:
1:        -> epoch.  standard debian thing.
0.25.0    -> upstream version number.
~         -> delimitter indicating this is less than the 0.25.0 release that hasn't yet happened
trunk     -> indicates this is a checkout from trunk
27235     -> svn revno
-0ubuntu1 -> indicates not in debian, but this is ubuntu package iteration 1
