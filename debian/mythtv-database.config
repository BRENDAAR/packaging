#!/bin/sh -e
#Try and connect to a sane default before
#actually looking for input
. /usr/share/debconf/confmodule

CONFIG=/etc/mythtv/mysql.txt
if [ -e $CONFIG ]; then
    db_set mythtv/mysql_mythtv_dbname "`sed -n -e 's/^\(str  *\)\?DBName=\(.*\)$/\2/gp;' $CONFIG`"
    db_set mythtv/mysql_mythtv_user "`sed -n -e 's/^\(str  *\)\?DBUserName=\(.*\)$/\2/gp;' $CONFIG`"
    db_set mythtv/mysql_mythtv_password "`sed -n -e 's/^\(str  *\)\?DBPassword=\(.*\)$/\2/gp;' $CONFIG`"
    db_set mythtv/mysql_host "`sed -n -e 's/^\(str  *\)\?DBHostName=\(.*\)$/\2/gp;' $CONFIG`"
fi

db_input low  mythtv/mysql_host || true
db_get mythtv/mysql_host
HOST="$RET"

if test -z "$HOST"; then
    HOST=localhost
    db_set mythtv/mysql_host "$HOST"
fi

db_input low mythtv/mysql_admin_user || true
db_get mythtv/mysql_admin_user
USER="$RET"
db_subst mythtv/mysql_admin_password user "$USER"

i=1
PASSWORD=
while ! echo "show databases;" | mysql --host="$HOST" --user="$USER" --password="$PASSWORD" >/dev/null 2>&1; do
    if [ $i -ge 5 ]; then
        echo "Failed to connect to database (incorrect admin password)" >&2
        db_set mythtv/mysql_admin_password ""
        exit 0
    fi
    db_input high mythtv/mysql_admin_password || true
    db_go
    db_get mythtv/mysql_admin_password
    PASSWORD="$RET"
    i=$(($i+1))
done

#Ask the user about expandability
db_input high mythtv/public_bind || true
db_go || true

exit 0
