#! /bin/sh /usr/share/dpatch/dpatch-run
## 13_changeset_16577.dpatch by Mario Limonciello <superm1@ubuntu.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Changeset #16577 from release-0-21-fixes.  Ref MythTV # 4914 regarding upnp
## DP: breakage on final release

@DPATCH@
diff -urNad mythtv-0.21.0~/libs/libmythupnp/ssdp.cpp mythtv-0.21.0/libs/libmythupnp/ssdp.cpp
--- mythtv-0.21.0~/libs/libmythupnp/ssdp.cpp	2007-12-17 20:51:27.000000000 -0600
+++ mythtv-0.21.0/libs/libmythupnp/ssdp.cpp	2008-03-16 18:16:37.000000000 -0500
@@ -251,7 +251,7 @@
         // Parse request Type
         // ------------------------------------------------------------------
 
-        // cout << "SSDP::ProcessData - requestLine: " << sRequestLine << endl;
+        VERBOSE(VB_UPNP, QString( "SSDP::ProcessData - requestLine: %1" ).arg( sRequestLine ));
 
         SSDPRequestType eType = ProcessRequestLine( sRequestLine );
 
@@ -349,7 +349,9 @@
     QString sMX  = GetHeaderValue( sHeaders, "MX" , "" );
     int     nMX  = 0;
 
-    //cout << "*** SSDP ProcessSearchrequest : [" << sST << "] MX = " << nMX << endl;
+    VERBOSE( VB_UPNP, QString( "SSDP::ProcessSearchrequest : [%1] MX=%2" )
+                         .arg( sST )
+                         .arg( nMX ));
 
     // ----------------------------------------------------------------------
     // Validate Header Values...
@@ -388,7 +390,7 @@
         // Excute task now for fastest response & queue for time-delayed response
         // -=>TODO: To be trully uPnp compliant, this Execute should be removed.
 
-        pTask->Execute( NULL );
+        //pTask->Execute( NULL );
 
         UPnp::g_pTaskQueue->AddTask( nNewMX, pTask );
 
@@ -433,6 +435,16 @@
     QString sUSN     = GetHeaderValue( headers, "USN"           , "" );
     QString sCache   = GetHeaderValue( headers, "CACHE-CONTROL" , "" );
 
+    VERBOSE( VB_UPNP, QString( "SSDP::ProcessSearchResponse \n"
+                               "DescURL=%1\n"
+                               "ST     =%2\n"
+                               "USN    =%3\n"
+                               "Cache  =%4")
+                         .arg( sDescURL )
+                         .arg( sST      )
+                         .arg( sUSN     )
+                         .arg( sCache   ));
+
     int nPos = sCache.find( "max-age", 0, false );
 
     if (nPos < 0)
@@ -460,6 +472,19 @@
     QString sUSN     = GetHeaderValue( headers, "USN"           , "" );
     QString sCache   = GetHeaderValue( headers, "CACHE-CONTROL" , "" );
 
+    VERBOSE( VB_UPNP, QString( "SSDP::ProcessNotify\n"
+                               "DescURL=%1\n"
+                               "NTS    =%2\n"
+                               "NT     =%3\n"
+                               "USN    =%4\n"
+                               "Cache  =%5" )
+                         .arg( sDescURL )
+                         .arg( sNTS     )
+                         .arg( sNT      )
+                         .arg( sUSN     )
+                         .arg( sCache   ));
+
+
     if (sNTS.contains( "ssdp:alive"))
     {
         int nPos = sCache.find( "max-age", 0, false );
@@ -559,6 +584,12 @@
 
     QString sUserAgent = pRequest->GetHeaderValue( "User-Agent", "" );
 
+    VERBOSE( VB_UPNP, QString( "SSDPExtension::GetDeviceDesc - Host=%1 Port=%2 UserAgent=%3" )
+                         .arg( pRequest->GetHostAddress() )
+                         .arg( m_nServicePort )
+                         .arg( sUserAgent ));
+
+
     UPnp::g_UPnpDeviceDesc.GetValidXML( pRequest->GetHostAddress(), 
                                         m_nServicePort,
                                         pRequest->m_response,
@@ -578,11 +609,18 @@
 
     if (QFile::exists( pRequest->m_sFileName ))
     {
+        VERBOSE( VB_UPNP, QString( "SSDPExtension::GetFile( %1 ) - Exists" )
+                             .arg( pRequest->m_sFileName ));
 
         pRequest->m_eResponseType                     = ResponseTypeFile;
         pRequest->m_nResponseStatus                   = 200;
         pRequest->m_mapRespHeaders[ "Cache-Control" ] = "no-cache=\"Ext\", max-age = 5000";
     }
+    else
+    {
+        VERBOSE( VB_UPNP, QString( "SSDPExtension::GetFile( %1 ) - Not Found" )
+                             .arg( pRequest->m_sFileName ));
+    }
 
 }
 
@@ -596,6 +634,8 @@
     int           nCount = 0;
     NameValueList list;
 
+    VERBOSE( VB_UPNP, "SSDPExtension::GetDeviceList" );
+
     cache.Lock();
 
     QString     sXML;
diff -urNad mythtv-0.21.0~/libs/libmythupnp/upnpcds.cpp mythtv-0.21.0/libs/libmythupnp/upnpcds.cpp
--- mythtv-0.21.0~/libs/libmythupnp/upnpcds.cpp	2008-03-02 15:14:41.000000000 -0600
+++ mythtv-0.21.0/libs/libmythupnp/upnpcds.cpp	2008-03-16 18:16:37.000000000 -0500
@@ -887,31 +887,11 @@
                     }
                 }
             }
+            break;
         }
         case CDS_BrowseDirectChildren:
         {
-
-	    QStringList tokens;
-
-	    if (pRequest->m_sObjectId.length() > 0)
-            {
-                if (pRequest->m_sObjectId.contains("="))
-                    tokens = QStringList::split( "=", pRequest->m_sObjectId );
-	        else 
-	        {
-	             tokens =  QStringList::split( "/", pRequest->m_sObjectId );
-
-	             tokens = QStringList::split( " ", tokens[tokens.count() - 1] );
-                     tokens = QStringList::split( "?", tokens[0] );
-
-                     if (tokens[0].startsWith("Id"))
-                         tokens[0] = tokens[0].right(tokens[0].length() - 2);
-
-	        }	
-            }
-
-            pRequest->m_sParentId = tokens.last();
-            CreateItems( pRequest, pResults, 0, "", false );
+            // Items don't have any children.
             break;
         }
 
diff -urNad mythtv-0.21.0~/libs/libmythupnp/upnpcds.h mythtv-0.21.0/libs/libmythupnp/upnpcds.h
--- mythtv-0.21.0~/libs/libmythupnp/upnpcds.h	2008-03-02 15:14:41.000000000 -0600
+++ mythtv-0.21.0/libs/libmythupnp/upnpcds.h	2008-03-16 18:16:37.000000000 -0500
@@ -124,22 +124,22 @@
 
         QString RemoveToken ( const QString &sToken, const QString &sStr, int num );
 
-        UPnpCDSExtensionResults *ProcessRoot     ( UPnpCDSRequest          *pRequest, 
-                                                   UPnpCDSExtensionResults *pResults,
-                                                   QStringList             &idPath );
-        UPnpCDSExtensionResults *ProcessAll      ( UPnpCDSRequest          *pRequest, 
-                                                   UPnpCDSExtensionResults *pResults,
-                                                   QStringList             &idPath );
-        UPnpCDSExtensionResults *ProcessItem     ( UPnpCDSRequest          *pRequest,
-                                                   UPnpCDSExtensionResults *pResults,
-                                                   QStringList             &idPath );
-        UPnpCDSExtensionResults *ProcessKey      ( UPnpCDSRequest          *pRequest,
-                                                   UPnpCDSExtensionResults *pResults,
-                                                   QStringList             &idPath );
-        UPnpCDSExtensionResults *ProcessContainer( UPnpCDSRequest          *pRequest,
-                                                   UPnpCDSExtensionResults *pResults,
-                                                   int                      nNodeIdx,
-                                                   QStringList             &idPath );
+        virtual UPnpCDSExtensionResults *ProcessRoot     ( UPnpCDSRequest          *pRequest, 
+                                                           UPnpCDSExtensionResults *pResults,
+                                                           QStringList             &idPath );
+        virtual UPnpCDSExtensionResults *ProcessAll      ( UPnpCDSRequest          *pRequest, 
+                                                           UPnpCDSExtensionResults *pResults,
+                                                           QStringList             &idPath );
+        virtual UPnpCDSExtensionResults *ProcessItem     ( UPnpCDSRequest          *pRequest,
+                                                           UPnpCDSExtensionResults *pResults,
+                                                           QStringList             &idPath );
+        virtual UPnpCDSExtensionResults *ProcessKey      ( UPnpCDSRequest          *pRequest,
+                                                           UPnpCDSExtensionResults *pResults,
+                                                           QStringList             &idPath );
+        virtual UPnpCDSExtensionResults *ProcessContainer( UPnpCDSRequest          *pRequest,
+                                                           UPnpCDSExtensionResults *pResults,
+                                                           int                      nNodeIdx,
+                                                           QStringList             &idPath );
 
         // ------------------------------------------------------------------
 
diff -urNad mythtv-0.21.0~/programs/mythbackend/upnpcdsvideo.cpp mythtv-0.21.0/programs/mythbackend/upnpcdsvideo.cpp
--- mythtv-0.21.0~/programs/mythbackend/upnpcdsvideo.cpp	2008-03-02 15:14:41.000000000 -0600
+++ mythtv-0.21.0/programs/mythbackend/upnpcdsvideo.cpp	2008-03-16 18:16:37.000000000 -0500
@@ -28,7 +28,7 @@
           "1 as children "
             "FROM upnpmedia "
             "%1 "
-            "ORDER BY title DESC",
+            "ORDER BY title",
         "" }
 
 };
@@ -87,7 +87,7 @@
 {
     int nVideoID = mapParams[ "Id" ].toInt();
 
-    QString sSQL = QString( "%1 WHERE class = 'VIDEO' AND intid=:VIDEOID " )
+    QString sSQL = QString( "%1 AND intid=:VIDEOID ORDER BY title DESC" )
                                                     .arg( GetItemListSQL( ) );
 
     query.prepare( sSQL );
@@ -211,6 +211,72 @@
 
     return nCount;
 }
+
+/////////////////////////////////////////////////////////////////////////////
+//
+/////////////////////////////////////////////////////////////////////////////
+
+UPnpCDSExtensionResults *UPnpCDSVideo::ProcessItem( UPnpCDSRequest          *pRequest,
+                                                    UPnpCDSExtensionResults *pResults, 
+                                                    QStringList             &idPath )
+{
+    pResults->m_nTotalMatches   = 0;
+    pResults->m_nUpdateID       = 1;
+
+    if (pRequest->m_sObjectId.length() == 0)
+        return pResults;
+
+    QStringList tokens = QStringList::split( "/", pRequest->m_sObjectId );
+    QString     sId    = tokens.last();
+
+    if (sId.startsWith("Id"))
+        sId = sId.right( sId.length() - 2);
+
+    switch( pRequest->m_eBrowseFlag )
+    {
+        case CDS_BrowseMetadata:
+        {
+            // --------------------------------------------------------------
+            // Return 1 Item
+            // --------------------------------------------------------------
+
+            QStringMap  mapParams;
+
+            mapParams.insert( "Id", sId );
+
+            MSqlQuery query(MSqlQuery::InitCon());
+
+            if (query.isConnected())                                                           
+            {
+                BuildItemQuery( query, mapParams );
+                query.exec();
+    
+                if (query.isActive() && query.size() > 0)
+                {
+                    if ( query.next() )
+                    {
+                        AddItem( pRequest->m_sParentId, pResults, false, query );
+                        pResults->m_nTotalMatches = 1;
+                    }
+                }
+            }
+
+            break;
+        }
+
+        case CDS_BrowseDirectChildren:
+        {
+            pRequest->m_sParentId = sId;
+
+            CreateItems( pRequest, pResults, 0, "", false );
+
+            break;
+        }
+    }
+
+    return pResults;
+}
+
 /////////////////////////////////////////////////////////////////////////////
 //
 /////////////////////////////////////////////////////////////////////////////
@@ -340,25 +406,17 @@
                             .arg( sServerIp )
                             .arg( sPort     );
 
-    QString sURIParams = QString( "?Id=%1" )
-                            .arg( nVidID );
-
-    QString sId        = QString( "%1/item%2")
-                            .arg( sObjectId )
-                            .arg( sURIParams );
-
-    sURIParams = QString( "/Id%1" ).arg( nVidID );
-    sId        = QString( "%1/item%2").arg( sObjectId ).arg( sURIParams );
+    QString sURIParams = QString( "/Id%1" ).arg( nVidID );
+    QString sId        = QString( "Videos/0/item%1").arg( sURIParams );
 
     if (sParentID == QString("%1").arg(STARTING_VIDEO_OBJECTID))
     {
-        sParentID          = sObjectId;
+        sParentID = "Videos/0";
     }
     else
     {
-        sParentID          = QString( "%1/item/Id%2")
-                            .arg( sObjectId )
-                            .arg( sParentID );
+        sParentID = QString( "Videos/0/item/Id%1")
+                       .arg( sParentID );
     }
 
     QString sAlbumArtURI= QString( "%1GetVideoArt%2")
@@ -371,6 +429,8 @@
     {
         pItem   = CDSObject::CreateStorageFolder( sId, sName, sParentID);
         pItem->SetChildCount( GetCount( "parentid",QString( "%1" ).arg( nVidID )) );
+
+        pItem->SetPropValue( "storageUsed", "0" );  //-=>TODO: need proper value
     }
     else if (sItemType == "FILE" )
         pItem   = CDSObject::CreateVideoItem( sId, sName, sParentID );
diff -urNad mythtv-0.21.0~/programs/mythbackend/upnpcdsvideo.h mythtv-0.21.0/programs/mythbackend/upnpcdsvideo.h
--- mythtv-0.21.0~/programs/mythbackend/upnpcdsvideo.h	2008-03-02 15:14:41.000000000 -0600
+++ mythtv-0.21.0/programs/mythbackend/upnpcdsvideo.h	2008-03-16 18:16:37.000000000 -0500
@@ -32,6 +32,10 @@
 
     protected:
 
+        virtual UPnpCDSExtensionResults *ProcessItem( UPnpCDSRequest          *pRequest,
+                                                      UPnpCDSExtensionResults *pResults,
+                                                      QStringList             &idPath );
+
         virtual void             CreateItems   ( UPnpCDSRequest          *pRequest,
                                                  UPnpCDSExtensionResults *pResults,
                                                  int                      nNodeIdx,
